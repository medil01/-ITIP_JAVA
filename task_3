public class main {import java.util.Arrays;
import java.util.List;

    public class Main {
        public static void main(String[] args) {
            // Задание 1: замена гласных символом "*"
            String word = replaceVowels("apple");
            System.out.println(word); // "*ppl*"

            // Задание 2: замена двух подряд букв символом "Double*"
            String transformedString = stringTransform("hello");
            System.out.println(transformedString); // "heDoubleLo"

            // Задание 3: проверка помещения блока в отверстие
            boolean blockFits = doesBlockFit(1, 3, 5, 4, 5);
            System.out.println(blockFits); // true

            // Задание 4: проверка четности суммы квадратов цифр числа
            boolean numCheckResult = numCheck(243);
            System.out.println(numCheckResult); // true

            // Задание 5: подсчет количества корней квадратного уравнения
            int rootsCount = countRoots(new int[]{1, -3, 2});
            System.out.println(rootsCount); // 2

            // Задание 6: поиск товаров проданных в каждом из магазинов
            List<String> soldProducts = salesData(new String[][]{
                    {"Apple", "Shop1", "Shop2", "Shop3", "Shop4"},
                    {"Banana", "Shop2", "Shop3", "Shop4"},
                    {"Orange", "Shop1", "Shop3", "Shop4"},
                    {"Pear", "Shop2", "Shop4"}
            });
            System.out.println(soldProducts); // ["Apple"]

            // Задание 7: проверка возможности разбиения предложения на слова
            boolean validSplit = validSplit("apple eagle egg goat");
            System.out.println(validSplit); // true

            // Задание 8: проверка волнообразности последовательности чисел
            boolean waveFormResult = waveForm(new int[]{3, 1, 4, 2, 7, 5});
            System.out.println(waveFormResult); // true

            // Задание 9: поиск наиболее часто встречающейся гласной
            char mostCommonVowel = commonVowel("Hello world");
            System.out.println(mostCommonVowel); // 'o'

            // Задание 10: изменение элементов массивов по правилу
            int[][] modifiedArray = dataScience(new int[][]{
                    {1, 2, 3, 4, 5},
                    {6, 7, 8, 9, 10},
                    {5, 5, 5, 5, 5},
                    {7, 4, 3, 14, 2},
                    {1, 0, 11, 10, 1}
            });
            for (int[] row : modifiedArray) {
                System.out.println(Arrays.toString(row));
            }
        }

        // Задание 1: замена гласных символом "*"
        public static String replaceVowels(String word) {
            return word.replaceAll("[aeiouAEIOU]", "*");
        }

        // Задание 2: замена двух подряд букв символом "Double*"
        public static String stringTransform(String input) {
            StringBuilder result = new StringBuilder();
            for (int i = 0; i < input.length(); i++) {
                if (i < input.length() - 1 && input.charAt(i) == input.charAt(i + 1)) {
                    result.append(input.charAt(i)).append("Double");
                } else {
                    result.append(input.charAt(i));
                }
            }
            return result.toString();
        }

        // Задание 3: проверка помещения блока в отверстие
        public static boolean doesBlockFit(int a, int b, int c, int w, int h) {
            int[] blockSizes = {a, b, c};
            Arrays.sort(blockSizes);
            int smallestSide = blockSizes[0];
            int secondSmallestSide = blockSizes[1];
            return smallestSide <= w && secondSmallestSide <= h;
        }

        // Задание 4: проверка четности суммы квадратов цифр числа
        public static boolean numCheck(int num) {
            int sumOfSquares = 0;
            int temp = num;
            while (temp != 0) {
                int digit = temp % 10;
                sumOfSquares += digit * digit;
                temp /= 10;
            }
            return num % 2 == sumOfSquares % 2;
        }

        // Задание 5: подсчет количества корней квадратного уравнения
        public static int countRoots(int[] coefficients) {
            int a = coefficients[0];
            int b = coefficients[1];
            int c = coefficients[2];
            int discriminant = b * b - 4 * a * c;
            if (discriminant > 0) {
                return 2;
            } else if (discriminant == 0) {
                return 1;
            } else {
                return 0;
            }
        }

        // Задание 6: поиск товаров проданных в каждом из магазинов
        public static List<String> salesData(String[][] sales) {
            List<String> soldProducts = Arrays.asList(sales[0]);
            for (int i = 1; i < sales.length; i++) {
                soldProducts.retainAll(Arrays.asList(sales[i]));
            }
            return soldProducts;
        }

        // Задание 7: проверка возможности разбиения предложения на слова
        public static boolean validSplit(String sentence) {
            String[] words = sentence.split(" ");
            for (int i = 1; i < words.length; i++) {
                if (words[i].charAt(0) != words[i - 1].charAt(words[i - 1].length() - 1)) {
                    return false;
                }
            }
            return true;
        }

        // Задание 8: проверка волнообразности последовательности чисел
        public static boolean waveForm(int[] sequence) {
            boolean increasing = sequence[0] < sequence[1];
            for (int i = 1; i < sequence.length; i++) {
                if (i % 2 == 1 && !increasing && sequence[i] <= sequence[i - 1]) {
                    return false;
                }
                if (i % 2 == 0 && increasing && sequence[i] >= sequence[i - 1]) {
                    return false;
                }
            }
            return true;
        }

        // Задание 9: поиск наиболее часто встречающейся гласной
        public static char commonVowel(String sentence) {
            String vowels = "AEIOUaeiou";
            int[] counts = new int[vowels.length()];
            for (int i = 0; i < sentence.length(); i++) {
                char ch = sentence.charAt(i);
                int index = vowels.indexOf(ch);
                if (index != -1) {
                    counts[index]++;
                }
            }
            int maxIndex = 0;
            for (int i = 1; i < counts.length; i++) {
                if (counts[i] > counts[maxIndex]) {
                    maxIndex = i;
                }
            }
            return vowels.charAt(maxIndex);
        }

        // Задание 10: изменение элементов массивов по правилу
        public static int[][] dataScience(int[][] arrays) {
            int n = arrays.length;
            int[][] result = new int[n][n];
            for (int col = 0; col < n; col++) {
                int sum = 0;
                for (int row = 0; row < n; row++) {
                    sum += arrays[row][col];
                }
                int average = sum / (n - 1);
                for (int row = 0; row < n; row++) {
                    if (row == col) {
                        result[row][col] = average;
                    } else {
                        result[row][col] = arrays[row][col];
                    }
                }
            }
            return result;
        }
    }
}
 
